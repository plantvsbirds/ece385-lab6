vendor_name = ModelSim
source_file = 1, C:/Users/Birdie Woods/Documents/GitHub/ece385-lab6/testbench_8.sv
source_file = 1, C:/Users/Birdie Woods/Documents/GitHub/ece385-lab6/ripple_adder.sv
source_file = 1, C:/Users/Birdie Woods/Documents/GitHub/ece385-lab6/reg.sv
source_file = 1, C:/Users/Birdie Woods/Documents/GitHub/ece385-lab6/mem.sv
source_file = 1, C:/Users/Birdie Woods/Documents/GitHub/ece385-lab6/main.sv
source_file = 1, C:/Users/Birdie Woods/Documents/GitHub/ece385-lab6/HexDriver.sv
source_file = 1, C:/Users/Birdie Woods/Documents/GitHub/ece385-lab6/control.sv
source_file = 1, C:/Users/Birdie Woods/Documents/GitHub/ece385-lab6/db/main.cbx.xml
design_name = main
instance = comp, \LED[0]~output , LED[0]~output, main, 1
instance = comp, \LED[1]~output , LED[1]~output, main, 1
instance = comp, \LED[2]~output , LED[2]~output, main, 1
instance = comp, \LED[3]~output , LED[3]~output, main, 1
instance = comp, \LED[4]~output , LED[4]~output, main, 1
instance = comp, \LED[5]~output , LED[5]~output, main, 1
instance = comp, \LED[6]~output , LED[6]~output, main, 1
instance = comp, \LED[7]~output , LED[7]~output, main, 1
instance = comp, \LED[8]~output , LED[8]~output, main, 1
instance = comp, \LED[9]~output , LED[9]~output, main, 1
instance = comp, \LED[10]~output , LED[10]~output, main, 1
instance = comp, \LED[11]~output , LED[11]~output, main, 1
instance = comp, \HEX0[0]~output , HEX0[0]~output, main, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, main, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, main, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, main, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, main, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, main, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, main, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, main, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, main, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, main, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, main, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, main, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, main, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, main, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, main, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, main, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, main, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, main, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, main, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, main, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, main, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, main, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, main, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, main, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, main, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, main, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, main, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, main, 1
instance = comp, \HEX4[0]~output , HEX4[0]~output, main, 1
instance = comp, \HEX4[1]~output , HEX4[1]~output, main, 1
instance = comp, \HEX4[2]~output , HEX4[2]~output, main, 1
instance = comp, \HEX4[3]~output , HEX4[3]~output, main, 1
instance = comp, \HEX4[4]~output , HEX4[4]~output, main, 1
instance = comp, \HEX4[5]~output , HEX4[5]~output, main, 1
instance = comp, \HEX4[6]~output , HEX4[6]~output, main, 1
instance = comp, \HEX5[0]~output , HEX5[0]~output, main, 1
instance = comp, \HEX5[1]~output , HEX5[1]~output, main, 1
instance = comp, \HEX5[2]~output , HEX5[2]~output, main, 1
instance = comp, \HEX5[3]~output , HEX5[3]~output, main, 1
instance = comp, \HEX5[4]~output , HEX5[4]~output, main, 1
instance = comp, \HEX5[5]~output , HEX5[5]~output, main, 1
instance = comp, \HEX5[6]~output , HEX5[6]~output, main, 1
instance = comp, \HEX6[0]~output , HEX6[0]~output, main, 1
instance = comp, \HEX6[1]~output , HEX6[1]~output, main, 1
instance = comp, \HEX6[2]~output , HEX6[2]~output, main, 1
instance = comp, \HEX6[3]~output , HEX6[3]~output, main, 1
instance = comp, \HEX6[4]~output , HEX6[4]~output, main, 1
instance = comp, \HEX6[5]~output , HEX6[5]~output, main, 1
instance = comp, \HEX6[6]~output , HEX6[6]~output, main, 1
instance = comp, \HEX7[0]~output , HEX7[0]~output, main, 1
instance = comp, \HEX7[1]~output , HEX7[1]~output, main, 1
instance = comp, \HEX7[2]~output , HEX7[2]~output, main, 1
instance = comp, \HEX7[3]~output , HEX7[3]~output, main, 1
instance = comp, \HEX7[4]~output , HEX7[4]~output, main, 1
instance = comp, \HEX7[5]~output , HEX7[5]~output, main, 1
instance = comp, \HEX7[6]~output , HEX7[6]~output, main, 1
instance = comp, \CE~output , CE~output, main, 1
instance = comp, \UB~output , UB~output, main, 1
instance = comp, \LB~output , LB~output, main, 1
instance = comp, \OE~output , OE~output, main, 1
instance = comp, \WE~output , WE~output, main, 1
instance = comp, \ADDR[0]~output , ADDR[0]~output, main, 1
instance = comp, \ADDR[1]~output , ADDR[1]~output, main, 1
instance = comp, \ADDR[2]~output , ADDR[2]~output, main, 1
instance = comp, \ADDR[3]~output , ADDR[3]~output, main, 1
instance = comp, \ADDR[4]~output , ADDR[4]~output, main, 1
instance = comp, \ADDR[5]~output , ADDR[5]~output, main, 1
instance = comp, \ADDR[6]~output , ADDR[6]~output, main, 1
instance = comp, \ADDR[7]~output , ADDR[7]~output, main, 1
instance = comp, \ADDR[8]~output , ADDR[8]~output, main, 1
instance = comp, \ADDR[9]~output , ADDR[9]~output, main, 1
instance = comp, \ADDR[10]~output , ADDR[10]~output, main, 1
instance = comp, \ADDR[11]~output , ADDR[11]~output, main, 1
instance = comp, \ADDR[12]~output , ADDR[12]~output, main, 1
instance = comp, \ADDR[13]~output , ADDR[13]~output, main, 1
instance = comp, \ADDR[14]~output , ADDR[14]~output, main, 1
instance = comp, \ADDR[15]~output , ADDR[15]~output, main, 1
instance = comp, \ADDR[16]~output , ADDR[16]~output, main, 1
instance = comp, \ADDR[17]~output , ADDR[17]~output, main, 1
instance = comp, \ADDR[18]~output , ADDR[18]~output, main, 1
instance = comp, \ADDR[19]~output , ADDR[19]~output, main, 1
instance = comp, \Clk~input , Clk~input, main, 1
instance = comp, \Clk~inputclkctrl , Clk~inputclkctrl, main, 1
instance = comp, \Reset~input , Reset~input, main, 1
instance = comp, \Execute~input , Execute~input, main, 1
instance = comp, \c0|curr_state~10 , c0|curr_state~10, main, 1
instance = comp, \c0|curr_state.DONE , c0|curr_state.DONE, main, 1
instance = comp, \c0|curr_state~9 , c0|curr_state~9, main, 1
instance = comp, \c0|curr_state.REST , c0|curr_state.REST, main, 1
instance = comp, \c0|curr_state~8 , c0|curr_state~8, main, 1
instance = comp, \c0|curr_state.FETCH , c0|curr_state.FETCH, main, 1
instance = comp, \Continue~input , Continue~input, main, 1
instance = comp, \S[0]~input , S[0]~input, main, 1
instance = comp, \S[1]~input , S[1]~input, main, 1
instance = comp, \S[2]~input , S[2]~input, main, 1
instance = comp, \S[3]~input , S[3]~input, main, 1
instance = comp, \S[4]~input , S[4]~input, main, 1
instance = comp, \S[5]~input , S[5]~input, main, 1
instance = comp, \S[6]~input , S[6]~input, main, 1
instance = comp, \S[7]~input , S[7]~input, main, 1
instance = comp, \S[8]~input , S[8]~input, main, 1
instance = comp, \S[9]~input , S[9]~input, main, 1
instance = comp, \S[10]~input , S[10]~input, main, 1
instance = comp, \S[11]~input , S[11]~input, main, 1
instance = comp, \S[12]~input , S[12]~input, main, 1
instance = comp, \S[13]~input , S[13]~input, main, 1
instance = comp, \S[14]~input , S[14]~input, main, 1
instance = comp, \S[15]~input , S[15]~input, main, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
